{"version":3,"sources":["assets/img/create-account-office.jpeg","assets/img/create-account-office-dark.jpeg","pages/SignUp.js","components/form/LabelArea.js","components/form/Error.js","components/form/InputArea.js","services/AdminServices.js","hooks/useLoginSubmit.js","components/form/SelectRole.js","services/httpService.js"],"names":["SignUp","t","useTranslation","onSubmit","register","handleSubmit","errors","loading","useLoginSubmit","_jsx","className","children","_jsxs","src","ImageLight","alt","ImageDark","LabelArea","label","InputArea","name","type","placeholder","Error","errorName","email","password","SelectRole","role","Label","check","Input","Button","disabled","to","block","ImFacebook","ImGoogle","Link","_ref","_Fragment","message","defaultValue","required","AdminServices","registerAdmin","async","requests","post","body","loginAdmin","response","data","redirectToDashboard","redirectURL","error","forgetPassword","put","resetPassword","signUpWithProvider","addStaff","getAllStaff","get","getStaffById","id","updateStaff","updateStaffStatus","deleteStaff","delete","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","formState","useForm","verifyEmail","pathname","then","res","notifySuccess","payload","Cookies","set","JSON","stringify","expires","push","catch","err","notifyError","setRole","Select","onChange","e","target","value","hidden","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","company","parse","authorization","token","responseBody","url","patch"],"mappings":"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","file":"static/js/44.4d924194.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/create-account-office.080280cb.jpeg\";","export default __webpack_public_path__ + \"static/media/create-account-office-dark.080280cb.jpeg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input, Label, Button } from \"@windmill/react-ui\";\r\nimport { ImFacebook, ImGoogle } from \"react-icons/im\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Error from \"components/form/Error\";\r\nimport InputArea from \"components/form/InputArea\";\r\nimport LabelArea from \"components/form/LabelArea\";\r\nimport SelectRole from \"components/form/SelectRole\";\r\nimport useLoginSubmit from \"hooks/useLoginSubmit\";\r\nimport ImageLight from \"assets/img/create-account-office.jpeg\";\r\nimport ImageDark from \"assets/img/create-account-office-dark.jpeg\";\r\n\r\nconst SignUp = () => {\r\n  const {t}=useTranslation()\r\n  const { onSubmit, register, handleSubmit, errors, loading } = useLoginSubmit();\r\n\r\n  return (\r\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n          <div className=\"h-32 md:h-auto md:w-1/2\">\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"object-cover w-full h-full dark:hidden\"\r\n              src={ImageLight}\r\n              alt=\"Office\"\r\n            />\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"hidden object-cover w-full h-full dark:block\"\r\n              src={ImageDark}\r\n              alt=\"Office\"\r\n            />\r\n          </div>\r\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n            <div className=\"w-full\">\r\n              <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                {t(\"CreateAccount\")}\r\n              </h1>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <LabelArea label=\"Name\" />\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Admin\"\r\n                />\r\n                <Error errorName={errors.name} />\r\n                <LabelArea label=\"Email\" />\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"john@doe.com\"\r\n                />\r\n                <Error errorName={errors.email} />\r\n\r\n                <LabelArea label=\"Password\" />\r\n                <InputArea\r\n                  register={register}\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"***************\"\r\n                />\r\n                <Error errorName={errors.password} />\r\n\r\n                <LabelArea label=\"Staff Role\" />\r\n                <div className=\"col-span-8 sm:col-span-4\">\r\n                  <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                  <Error errorName={errors.role} />\r\n                </div>\r\n\r\n                <Label className=\"mt-6\" check>\r\n                  <Input type=\"checkbox\" />\r\n                  <span className=\"ml-2\">\r\n                    {t(\"Iagree\")} <span className=\"underline\">{t(\"privacyPolicy\")}</span>\r\n                  </span>\r\n                </Label>\r\n\r\n                <Button\r\n                  disabled={loading}\r\n                  type=\"submit\"\r\n                  className=\"mt-4 h-12 w-full\"\r\n                  to=\"/dashboard\"\r\n                  block\r\n                >\r\n                  {t(\"CreateAccountTitle\")}\r\n                </Button>\r\n              </form>\r\n\r\n              <hr className=\"my-10\" />\r\n\r\n              <button\r\n                disabled\r\n                className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2 md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-blue-600 h-11 md:h-12 w-full mr-2\"\r\n              >\r\n                <ImFacebook className=\"w-4 h-4 mr-2\" /> <span className=\"ml-2\"> {t(\"LoginWithFacebook\")} </span>\r\n              </button>\r\n              <button\r\n                disabled\r\n                className=\"text-sm inline-flex items-center cursor-pointer transition ease-in-out duration-300 font-semibold font-serif text-center justify-center rounded-md focus:outline-none text-gray-700 bg-gray-100 shadow-sm my-2  md:px-2 lg:px-3 py-4 md:py-3.5 lg:py-4 hover:text-white hover:bg-red-500 h-11 md:h-12 w-full\"\r\n              >\r\n                <ImGoogle className=\"w-4 h-4 mr-2\" /> <span className=\"ml-2\">{t(\"LoginWithGoogle\")}</span>\r\n              </button>\r\n\r\n              <p className=\"mt-4\">\r\n                <Link\r\n                  className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\r\n                  to=\"/login\"\r\n                >\r\n                 {t(\"AlreadyAccount\")}\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Input } from \"@windmill/react-ui\";\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import requests from \"./httpService\";\r\nconst AdminServices = {\r\n  registerAdmin: async (body) => {\r\n    return requests.post(\"/admin/register\", body);\r\n  },\r\n  // loginAdmin: async (body) => {\r\n  //   return requests.post(`/admin/login`, body);\r\n  // },\r\n  loginAdmin: async (body) => {\r\n    try {\r\n      const response = await requests.post(`/admin/login`, body);\r\n      \r\n      // Check the response data and set redirection properties accordingly\r\n      if (response.data && response.data.redirectToDashboard && response.data.redirectURL) {\r\n        return { ...response, redirectToDashboard: response.data.redirectToDashboard, redirectURL: response.data.redirectURL };\r\n      } else {\r\n        // If the necessary redirection information is not provided in the response data,\r\n        // you can set default values or handle it as needed\r\n        return { ...response, redirectToDashboard: false, redirectURL: '/' }; // Default redirection\r\n      }\r\n    } catch (error) {\r\n      // Handle any error that occurs during the API request\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  forgetPassword: async (body) => {\r\n    return requests.put(\"/admin/forget-password\", body);\r\n  },\r\n  resetPassword: async (body) => {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n  signUpWithProvider: async (body) => {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n  addStaff: async (body) => {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff: async (body) => {\r\n    return requests.get(\"/admin\", body);\r\n  },\r\n  getStaffById: async (id, body) => {\r\n    return requests.post(`/admin/${id}`, body);\r\n  },\r\n  updateStaff: async (id, body) => {\r\n    return requests.put(`/admin/${id}`, body);\r\n  },\r\n  updateStaffStatus: async (id, body) => {\r\n    return requests.put(`/admin/update-status/${id}`, body);\r\n  },\r\n  deleteStaff: async (id) => {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\nexport default AdminServices;\r\n","import Cookies from 'js-cookie';\r\nimport { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { AdminContext } from 'context/AdminContext';\r\nimport AdminServices from 'services/AdminServices';\r\nimport { notifyError, notifySuccess } from 'utils/toast';\r\nconst useLoginSubmit = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { dispatch } = useContext(AdminContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\r\n    setLoading(true);\r\n    const cookieTimeOut = 0.5;\r\n  \r\n    if (location.pathname === '/login') {\r\n      AdminServices.loginAdmin({ email, password })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess('Login Success!');\r\n            dispatch({ type: 'USER_LOGIN', payload: res });\r\n            Cookies.set('adminInfo', JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            if (res.redirectToDashboard) {\r\n              history.push(res.redirectURL || '/dashboard'); // Redirect to specified URL or default dashboard\r\n            } else {\r\n              history.push('/');\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n  \r\n    } else if (location.pathname === '/signup') {\r\n      AdminServices.registerAdmin({ name, email, password, role })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess('Register Success!');\r\n            dispatch({ type: 'USER_LOGIN', payload: res });\r\n            Cookies.set('adminInfo', JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n  \r\n    } else if (location.pathname === '/forgot-password') {\r\n      AdminServices.forgetPassword({ verifyEmail })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          notifySuccess(res.message);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          notifyError(err ? err.response.data.message : err.message);\r\n        });\r\n    }\r\n  };\r\n  \r\n\r\n  return {\r\n    onSubmit,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    loading,\r\n  };\r\n};\r\nexport default useLoginSubmit;\r\n","import React from 'react';\r\nimport { Select } from '@windmill/react-ui';\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Staff role\r\n        </option>\r\n        <option value=\"Admin\">Admin</option>\r\n        <option value=\"Executive\">Executive</option>\r\n        {/* <option value=\"Manager\">Manager</option>\r\n        <option value=\"Accountant\">Accountant</option>\r\n        <option value=\"Driver\"> Driver </option>\r\n        <option value=\"Security Guard\">Security Guard</option>\r\n        <option value=\"Deliver Person\">Delivery Person</option> */}\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  timeout: 50000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get('adminInfo')) {\r\n    adminInfo = JSON.parse(Cookies.get('adminInfo'));\r\n  }\r\n\r\n  let company;\r\n\r\n  if (Cookies.get('company')) {\r\n    company = Cookies.get('company');\r\n  }\r\n\r\n  // console.log('Admin Http Services Cookie Read : ' + company);\r\n  // let companyName = JSON.stringify(company);\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n      company: company ? company : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url, body) => instance.delete(url, body).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n"],"sourceRoot":""}