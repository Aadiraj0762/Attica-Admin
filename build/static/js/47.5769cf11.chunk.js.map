{"version":3,"sources":["assets/img/login-office.jpeg.jpg","assets/img/login-office-dark.jpeg.jpg","pages/Login.js","components/form/LabelArea.js","components/form/Error.js","components/form/InputArea.js","services/AdminServices.js","hooks/useLoginSubmit.js","services/httpService.js"],"names":["Login","t","useTranslation","onSubmit","register","handleSubmit","errors","loading","useHistory","useLoginSubmit","showPassword","setShowPassword","useState","togglePasswordVisibility","_jsx","_Fragment","children","className","_jsxs","src","ImageLight","alt","ImageDark","LabelArea","label","InputArea","name","type","placeholder","Error","errorName","email","style","position","top","right","transform","FiEye","cursor","onClick","FiEyeOff","password","Button","id","disabled","to","Link","_ref","Label","message","defaultValue","required","Input","AdminServices","registerAdmin","async","requests","post","body","loginAdmin","response","data","redirectToDashboard","redirectURL","error","forgetPassword","put","resetPassword","signUpWithProvider","addStaff","getAllStaff","get","getStaffById","updateStaff","updateStaffStatus","deleteStaff","delete","setLoading","dispatch","useContext","AdminContext","history","location","useLocation","formState","useForm","verifyEmail","role","pathname","then","res","notifySuccess","payload","Cookies","set","JSON","stringify","expires","push","catch","err","notifyError","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","company","parse","authorization","token","responseBody","url","patch"],"mappings":"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","file":"static/js/47.5769cf11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login-office.jpeg.2fda2282.jpg\";","export default __webpack_public_path__ + \"static/media/login-office-dark.jpeg.2fda2282.jpg\";","// import { React, useState } from \"react\";\r\n// import { Link, useHistory } from \"react-router-dom\";\r\n// import { Button } from \"@windmill/react-ui\";\r\n// import { ImFacebook, ImGoogle } from \"react-icons/im\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import Error from \"components/form/Error\";\r\n// import LabelArea from \"components/form/LabelArea\";\r\n// import InputArea from \"components/form/InputArea\";\r\n// import ImageLight from \"assets/img/login-office.jpeg\";\r\n// import ImageDark from \"assets/img/login-office-dark.jpeg\";\r\n// import useLoginSubmit from \"../hooks/useLoginSubmit\";\r\n// import { FiEye, FiEyeOff } from \"react-icons/fi\";\r\n// const Login = () => {\r\n//   const { t } = useTranslation();\r\n//   const { onSubmit, register, handleSubmit, errors, loading } = useLoginSubmit();\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const togglePasswordVisibility = () => {\r\n//     setShowPassword(!showPassword);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n//         <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n//           <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n//             <div className=\"h-32 md:h-auto md:w-1/2\">\r\n//               <img\r\n//                 aria-hidden=\"true\"\r\n//                 className=\"object-cover w-full h-full dark:hidden\"\r\n//                 src={ImageLight}\r\n//                 alt=\"Office\"\r\n//               />\r\n//               <img\r\n//                 aria-hidden=\"true\"\r\n//                 className=\"hidden object-cover w-full h-full dark:block\"\r\n//                 src={ImageDark}\r\n//                 alt=\"Office\"\r\n//               />\r\n//             </div>\r\n//             <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n//               <div className=\"w-full\">\r\n//                 <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n//                   Login\r\n//                 </h1>\r\n//                 <form onSubmit={handleSubmit(onSubmit)}>\r\n//                   <LabelArea label=\"Email\" />\r\n//                   <InputArea\r\n//                     register={register}\r\n//                     label=\"Email\"\r\n//                     name=\"email\"\r\n//                     type=\"email\"\r\n//                     placeholder=\"john@doe.com\"\r\n//                   />\r\n//                   <Error errorName={errors.email} />\r\n//                   <div className=\"mt-6\">\r\n//                     <LabelArea label=\"Password\" />\r\n//                     <div style={{ position: 'relative' }}>\r\n//                       <InputArea\r\n//                         register={register}\r\n//                         label=\"Password\"\r\n//                         name=\"password\"\r\n//                         type={showPassword ? 'text' : 'password'}\r\n//                         placeholder=\"***************\"\r\n//                       />\r\n//                       <div\r\n//                         style={{ position: 'absolute', top: '50%', right: '10px', transform: 'translateY(-50%)' }}>\r\n//                         {showPassword ? (\r\n//                           <FiEye cursor=\"pointer\" onClick={togglePasswordVisibility} />\r\n//                         ) : (\r\n//                           <FiEyeOff cursor=\"pointer\" onClick={togglePasswordVisibility} />\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                     <Error errorName={errors.password} />\r\n//                   </div>\r\n//                   <Button\r\n//                     id=\"styleButton\"\r\n//                     disabled={loading}\r\n//                     type=\"submit\"\r\n//                     className=\"mt-4 h-12 w-full\"\r\n//                     to=\"/dashboard\"\r\n//                   >\r\n//                     {t(\"LoginTitle\")}\r\n//                   </Button>\r\n//                   <hr className=\"my-10\" />\r\n//                 </form>\r\n//                 <div className=\"flex flex-row\">\r\n//                   <p className=\"mt-1 mr-6\">\r\n//                     <Link\r\n//                       id=\"styleLink\"\r\n//                       className=\"text-sm font-medium \"\r\n//                       to=\"/forgot-password\"\r\n//                     >\r\n//                       {t(\"ForgotPassword\")}\r\n//                     </Link>\r\n//                   </p>\r\n//                   <p className=\"mt-1 mr-6\">\r\n//                     <Link\r\n//                       className=\"text-sm font-medium \"\r\n//                       id=\"styleLink\"\r\n//                     to=\"/executive\"\r\n//                     >\r\n//                       {t(\"CreateAccount\")}\r\n//                     </Link>\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//             </main>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n// export default Login;\r\n// // ------------------------------------------------------------Testing Netlify Deploy-----------------------------------------------------------------------\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"@windmill/react-ui\";\r\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Error from \"components/form/Error\";\r\nimport LabelArea from \"components/form/LabelArea\";\r\nimport InputArea from \"components/form/InputArea\";\r\nimport ImageLight from \"assets/img/login-office.jpeg.jpg\";\r\nimport ImageDark from \"assets/img/login-office-dark.jpeg.jpg\";\r\nimport useLoginSubmit from \"../hooks/useLoginSubmit\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const { onSubmit, register, handleSubmit, errors, loading } = useLoginSubmit();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const loginUser = async (data) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/admin/login\", data);\r\n      const { token, name, email, role, redirectToDashboard, redirectURL } = response.data;\r\n\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"name\", name);\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"role\", role);\r\n\r\n      if (redirectToDashboard) {\r\n        const finalRedirectURL = redirectURL || \"/dashboard\";\r\n        history.push(finalRedirectURL);\r\n      } else {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error.response.data.message);\r\n      // Handle login error\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (formData) => {\r\n    loginUser(formData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n        <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n          <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n            <div className=\"h-32 md:h-auto md:w-1/2\">\r\n              <img\r\n                aria-hidden=\"true\"\r\n                className=\"object-cover w-full h-full dark:hidden\"\r\n                src={ImageLight}\r\n                alt=\"Office\"\r\n              />\r\n              <img\r\n                aria-hidden=\"true\"\r\n                className=\"hidden object-cover w-full h-full dark:block\"\r\n                src={ImageDark}\r\n                alt=\"Office\"\r\n              />\r\n            </div>\r\n            <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n              <div className=\"w-full\">\r\n                <h1 className=\"mb-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                  Login\r\n                </h1>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <LabelArea label=\"Email\" />\r\n                  <InputArea\r\n                    register={register}\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"john@doe.com\"\r\n                  />\r\n                  <Error errorName={errors.email} />\r\n                  <div className=\"mt-6\">\r\n                    <LabelArea label=\"Password\" />\r\n                    <div style={{ position: 'relative' }}>\r\n                      <InputArea\r\n                        register={register}\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type={showPassword ? 'text' : 'password'}\r\n                        placeholder=\"***************\"\r\n                      />\r\n                      <div\r\n                        style={{ position: 'absolute', top: '50%', right: '10px', transform: 'translateY(-50%)' }}>\r\n                        {showPassword ? (\r\n                          <FiEye cursor=\"pointer\" onClick={togglePasswordVisibility} />\r\n                        ) : (\r\n                          <FiEyeOff cursor=\"pointer\" onClick={togglePasswordVisibility} />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <Error errorName={errors.password} />\r\n                  </div>\r\n                  <Button\r\n                    id=\"styleButton\"\r\n                    disabled={loading}\r\n                    type=\"submit\"\r\n                    className=\"mt-4 h-12 w-full\"\r\n                    to=\"/dashboard\"\r\n                  >\r\n                    {t(\"LoginTitle\")}\r\n                  </Button>\r\n                  <hr className=\"my-10\" />\r\n                </form>\r\n                <div className=\"flex flex-row\">\r\n                  <p className=\"mt-1 mr-6\">\r\n                    <Link\r\n                      id=\"styleLink\"\r\n                      className=\"text-sm font-medium \"\r\n                      to=\"/forgot-password\"\r\n                    >\r\n                      {t(\"ForgotPassword\")}\r\n                    </Link>\r\n                  </p>\r\n                  <p className=\"mt-1 mr-6\">\r\n                    <Link\r\n                      className=\"text-sm font-medium \"\r\n                      id=\"styleLink\"\r\n                      to=\"/executive\"\r\n                    >\r\n                      {t(\"CreateAccount\")}\r\n                    </Link>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Input } from \"@windmill/react-ui\";\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import requests from \"./httpService\";\r\nconst AdminServices = {\r\n  registerAdmin: async (body) => {\r\n    return requests.post(\"/admin/register\", body);\r\n  },\r\n  // loginAdmin: async (body) => {\r\n  //   return requests.post(`/admin/login`, body);\r\n  // },\r\n  loginAdmin: async (body) => {\r\n    try {\r\n      const response = await requests.post(`/admin/login`, body);\r\n      \r\n      // Check the response data and set redirection properties accordingly\r\n      if (response.data && response.data.redirectToDashboard && response.data.redirectURL) {\r\n        return { ...response, redirectToDashboard: response.data.redirectToDashboard, redirectURL: response.data.redirectURL };\r\n      } else {\r\n        // If the necessary redirection information is not provided in the response data,\r\n        // you can set default values or handle it as needed\r\n        return { ...response, redirectToDashboard: false, redirectURL: '/' }; // Default redirection\r\n      }\r\n    } catch (error) {\r\n      // Handle any error that occurs during the API request\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  forgetPassword: async (body) => {\r\n    return requests.put(\"/admin/forget-password\", body);\r\n  },\r\n  resetPassword: async (body) => {\r\n    return requests.put(\"/admin/reset-password\", body);\r\n  },\r\n  signUpWithProvider: async (body) => {\r\n    return requests.post(\"/admin/signup\", body);\r\n  },\r\n  addStaff: async (body) => {\r\n    return requests.post(\"/admin/add\", body);\r\n  },\r\n  getAllStaff: async (body) => {\r\n    return requests.get(\"/admin\", body);\r\n  },\r\n  getStaffById: async (id, body) => {\r\n    return requests.post(`/admin/${id}`, body);\r\n  },\r\n  updateStaff: async (id, body) => {\r\n    return requests.put(`/admin/${id}`, body);\r\n  },\r\n  updateStaffStatus: async (id, body) => {\r\n    return requests.put(`/admin/update-status/${id}`, body);\r\n  },\r\n  deleteStaff: async (id) => {\r\n    return requests.delete(`/admin/${id}`);\r\n  },\r\n};\r\nexport default AdminServices;\r\n","import Cookies from 'js-cookie';\r\nimport { useContext, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { AdminContext } from 'context/AdminContext';\r\nimport AdminServices from 'services/AdminServices';\r\nimport { notifyError, notifySuccess } from 'utils/toast';\r\nconst useLoginSubmit = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { dispatch } = useContext(AdminContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\r\n    setLoading(true);\r\n    const cookieTimeOut = 0.5;\r\n  \r\n    if (location.pathname === '/login') {\r\n      AdminServices.loginAdmin({ email, password })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess('Login Success!');\r\n            dispatch({ type: 'USER_LOGIN', payload: res });\r\n            Cookies.set('adminInfo', JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            if (res.redirectToDashboard) {\r\n              history.push(res.redirectURL || '/dashboard'); // Redirect to specified URL or default dashboard\r\n            } else {\r\n              history.push('/');\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n  \r\n    } else if (location.pathname === '/signup') {\r\n      AdminServices.registerAdmin({ name, email, password, role })\r\n        .then((res) => {\r\n          if (res) {\r\n            setLoading(false);\r\n            notifySuccess('Register Success!');\r\n            dispatch({ type: 'USER_LOGIN', payload: res });\r\n            Cookies.set('adminInfo', JSON.stringify(res), {\r\n              expires: cookieTimeOut,\r\n            });\r\n            history.push('/');\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(err ? err.response.data.message : err.message);\r\n          setLoading(false);\r\n        });\r\n  \r\n    } else if (location.pathname === '/forgot-password') {\r\n      AdminServices.forgetPassword({ verifyEmail })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          notifySuccess(res.message);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          notifyError(err ? err.response.data.message : err.message);\r\n        });\r\n    }\r\n  };\r\n  \r\n\r\n  return {\r\n    onSubmit,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    loading,\r\n  };\r\n};\r\nexport default useLoginSubmit;\r\n","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  timeout: 50000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get('adminInfo')) {\r\n    adminInfo = JSON.parse(Cookies.get('adminInfo'));\r\n  }\r\n\r\n  let company;\r\n\r\n  if (Cookies.get('company')) {\r\n    company = Cookies.get('company');\r\n  }\r\n\r\n  // console.log('Admin Http Services Cookie Read : ' + company);\r\n  // let companyName = JSON.stringify(company);\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n      company: company ? company : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url, body) => instance.delete(url, body).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n"],"sourceRoot":""}