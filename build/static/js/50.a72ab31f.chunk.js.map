{"version":3,"sources":["components/dashboard/CardItem.js","pages/Dashboard.js","components/Typography/PageTitle.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"names":["CardItem","Dashboard","mode","useContext","WindmillContext","currentPage","handleChangePage","lang","SidebarContext","counts","setCounts","useState","suppliers","sellers","totalStock","totalProducts","totalItems","useEffect","async","response","axios","get","console","log","data","products","items","error","fetchCounts","_ref","title","count","Icon","className","_jsxs","children","_jsx","_Fragment","PageTitle","FiSlack","FiShoppingCart","SkeletonThemeContext","React","createContext","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","_ref2","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","createElement","push","Fragment","map","el"],"mappings":"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","file":"static/js/50.a72ab31f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody } from \"@windmill/react-ui\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst CardItem = ({\r\n  title,\r\n  Icon,\r\n  quantity,\r\n  amount,\r\n  className,\r\n  loading,\r\n  mode,\r\n  pending,\r\n  todayPending,\r\n  olderPending,\r\n}) => {\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Skeleton\r\n          count={2}\r\n          height={40}\r\n          className=\"dark:bg-gray-800 bg-gray-200\"\r\n          baseColor={`${mode === \"dark\" ? \"#010101\" : \"#f9f9f9\"}`}\r\n          highlightColor={`${mode === \"dark\" ? \"#1a1c23\" : \"#f8f8f8\"} `}\r\n        />\r\n      ) : (\r\n        <Card className=\"flex h-full\">\r\n          <CardBody className=\"flex items-center border border-gray-200 dark:border-gray-800 w-full rounded-lg\">\r\n            <div\r\n              className={`flex items-center justify-center p-3 rounded-full h-12 w-12 text-center mr-4 text-lg ${className}`}\r\n            >\r\n              <Icon />\r\n            </div>\r\n\r\n            <div>\r\n              <h6 className=\"text-sm mb-1 font-medium text-gray-600 dark:text-gray-400\">\r\n                <span>{title}</span>{\" \"}\r\n                {amount && (\r\n                  <span className=\"text-red-500 text-sm font-semibold\">\r\n                    ({parseFloat(amount).toFixed(2)})\r\n                  </span>\r\n                )}\r\n              </h6>\r\n              {pending && (\r\n                <div className=\"grid grid-cols-2 gap-4 w-full mb-1 text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n                  <div>\r\n                    <span className=\"font-semibold\">Today</span>{\" \"}\r\n                    <span className=\"text-green-600 text-sm font-semibold\">\r\n                      ({parseFloat(todayPending || 0).toFixed(2)})\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span className=\"font-semibold\">Older</span>{\" \"}\r\n                    <span className=\"text-orange-400 text-sm font-semibold\">\r\n                      ({parseFloat(olderPending || 0).toFixed(2)})\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <p className=\"text-2xl font-bold leading-none text-gray-600 dark:text-gray-200\">\r\n                {quantity}\r\n              </p>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","// import {\r\n//   Pagination,\r\n//   Table,\r\n//   TableCell,\r\n//   TableContainer,\r\n//   TableFooter,\r\n//   TableHeader,\r\n//   WindmillContext,\r\n// } from \"@windmill/react-ui\";\r\n// import axios from \"axios\";\r\n\r\n// import LineChart from \"components/chart/LineChart/LineChart\";\r\n// import PieChart from \"components/chart/Pie/PieChart\";\r\n// import CardItem from \"components/dashboard/CardItem\";\r\n// import CardItemTwo from \"components/dashboard/CardItemTwo\";\r\n// import ChartCard from \"components/chart/ChartCard\";\r\n// import OrderTable from \"components/order/OrderTable\";\r\n// import TableLoading from \"components/preloader/TableLoading\";\r\n// import NotFound from \"components/table/NotFound\";\r\n// import PageTitle from \"components/Typography/PageTitle\";\r\n// import { SidebarContext } from \"context/SidebarContext\";\r\n// import * as dayjs from \"dayjs\";\r\n// import isBetween from \"dayjs/plugin/isBetween\";\r\n// import isToday from \"dayjs/plugin/isToday\";\r\n// import isYesterday from \"dayjs/plugin/isYesterday\";\r\n// import useFilter from \"hooks/useFilter\";\r\n// import { useContext, useEffect, useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import { FiCheck, FiRefreshCw, FiShoppingCart, FiTruck } from \"react-icons/fi\";\r\n// import { ImCreditCard, ImStack } from \"react-icons/im\";\r\n// //internal import\r\n// const Dashboard = () => {\r\n//   const { globalSetting } = useFilter();\r\n//   const { mode } = useContext(WindmillContext);\r\n//   dayjs.extend(isBetween);\r\n//   dayjs.extend(isToday);\r\n//   dayjs.extend(isYesterday);\r\n//   const { t } = useTranslation();\r\n//   const { currentPage, handleChangePage, lang } = useContext(SidebarContext);\r\n//   const [counts, setCounts] = useState({\r\n//     suppliers: 0,\r\n//     sellers: 0,\r\n//     totalStock: 0,\r\n//     totalProducts: 0,\r\n//     totalItems: 0,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchCounts = async () => {\r\n//       try {\r\n//         const response = await axios.get('https://attica.onrender.com//api/dashboard'); // Assuming the API route is set up in your backend\r\n\r\n//         setCounts({\r\n//           suppliers: response.data.suppliers || 0,\r\n//           sellers: response.data.sellers || 0,\r\n//           totalStock: response.data.totalStock || 0,\r\n//           totalProducts: response.data.products || 0,\r\n//           totalItems: response.data.items || 0,\r\n//         });\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching counts:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCounts();\r\n//   }, []);\r\n//   return (\r\n//     <>\r\n//       <PageTitle>{t(\"DashboardOverview\")}</PageTitle>\r\n\r\n//       <div className=\"grid gap-4 md:grid-cols-2 xl:grid-cols-4\">\r\n//         <CardItem\r\n//           title=\"Suppliers\"\r\n//           count={counts.suppliers}\r\n//           Icon={FiShoppingCart}\r\n//           className=\"text-orange-600 dark:text-orange-100 bg-orange-100 dark:bg-orange-500\"\r\n//         />\r\n//         <CardItem\r\n//           title=\"Sellers\"\r\n//           count={counts.sellers}\r\n//           Icon={FiRefreshCw}\r\n//           className=\"text-blue-600 dark:text-blue-100 bg-blue-100 dark:bg-blue-500\"\r\n//         />\r\n//         <CardItem\r\n//           title=\"Total Stock\"\r\n//           count={counts.totalStock}\r\n//           Icon={FiTruck}\r\n//           className=\"text-teal-600 dark:text-teal-100 bg-teal-100 dark:bg-teal-500\"\r\n//         />\r\n//         <CardItem\r\n//           title=\"Total Products\"\r\n//           count={counts.totalProducts}\r\n//           Icon={FiCheck}\r\n//           className=\"text-green-600 dark:text-green-100 bg-green-100 dark:bg-green-500\"\r\n//         />\r\n//         <CardItem\r\n//           title=\"Total Items\"\r\n//           count={counts.totalItems}\r\n//           Icon={FiCheck}\r\n//           className=\"text-green-600 dark:text-green-100 bg-green-100 dark:bg-green-500\"\r\n//         />\r\n//       </div>\r\n\r\n//     </>\r\n//   );\r\n// };\r\n// export default Dashboard;\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\"; // Import axios library\r\nimport { WindmillContext } from \"@windmill/react-ui\";\r\nimport { SidebarContext } from \"context/SidebarContext\";\r\nimport PageTitle from \"components/Typography/PageTitle\";\r\nimport CardItem from \"components/dashboard/CardItem\";\r\nimport { FiShoppingCart, FiRefreshCw, FiTruck, FiCheck, FiSlack } from \"react-icons/fi\";\r\n\r\nconst Dashboard = () => {\r\n  const { mode } = useContext(WindmillContext);\r\n  const { currentPage, handleChangePage, lang } = useContext(SidebarContext);\r\n\r\n  const [counts, setCounts] = useState({\r\n    suppliers: 0,\r\n    sellers: 0,\r\n    totalStock: 0,\r\n    totalProducts: 0,\r\n    totalItems: 0,\r\n  });\r\n\r\n  // Your existing imports and code\r\n\r\n  useEffect(() => {\r\n    const fetchCounts = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5055/api/dashboard\");\r\n        console.log(\"API Response:\", response.data); // Log API response for debugging\r\n\r\n        setCounts({\r\n          suppliers: response.data.suppliers || 0,\r\n          sellers: response.data.sellers || 0,\r\n          totalStock: response.data.totalStock || 0,\r\n          totalProducts: response.data.products || 0,\r\n          totalItems: response.data.items || 0,\r\n        });\r\n      } catch (error) {\r\n        console.error(`Error fetching counts: ${error}`);\r\n        console.log(\"API Error Response:\", error.response.data); // Log API error response data\r\n      }\r\n    };\r\n\r\n    fetchCounts();\r\n  }, []);\r\n\r\n  const CardItem = ({ title, count, Icon, className }) => {\r\n    return (\r\n      <div\r\n        className={`flex items-center p-4 bg-white rounded-lg shadow-sm ${className}`}\r\n      >\r\n        <Icon className=\"h-8 w-8 text-indigo-500\" />\r\n        <div className=\"ml-4\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\r\n            {title}\r\n          </h2>\r\n          <h3 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n            {count}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Dashboard Overview</PageTitle>\r\n\r\n      <div className=\"grid gap-4 md:grid-cols-2 xl:grid-cols-4\">\r\n      <CardItem\r\n          title=\"Suppliers\"\r\n          count={counts.suppliers}\r\n          Icon={FiSlack}\r\n          className=\"text-blue-600 dark:text-blue-100 bg-blue-100 dark:bg-blue-500\"\r\n        />\r\n        <CardItem\r\n          title=\"Sellers\"\r\n          count={counts.sellers}\r\n          Icon={FiSlack}\r\n          className=\"text-blue-600 dark:text-blue-100 bg-blue-100 dark:bg-blue-500\"\r\n        />\r\n\r\n        \r\n        <CardItem\r\n          title=\"Total Products\"\r\n          count={counts.totalProducts}\r\n          Icon={FiShoppingCart}\r\n          className=\"text-green-600 dark:text-green-100 bg-green-100 dark:bg-green-500\"\r\n        />\r\n        <CardItem\r\n          title=\"Total Items\"\r\n          count={counts.totalItems}\r\n          Icon={FiShoppingCart}\r\n          className=\"text-green-600 dark:text-green-100 bg-green-100 dark:bg-green-500\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst PageTitle = ({ children }) => {\r\n  return (\r\n    <h1 className=\"my-6 text-lg font-bold text-gray-700 dark:text-gray-300\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"sourceRoot":""}